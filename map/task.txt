Задание
Сегодня нам предстоит поработать. Дело в том, что мы будем реализовывать
с Вами интерфейс Map! На базе списка пар. Возможно, Вы подумаете, что список
пар лучше заменить на Set пар, и будете правы! Но так как тему Set мы еще не трогали
(и позже станет понятно почему), то остановимся на списке.

В Вашем распоряжении есть список пар, каждая пара представлена в виде объекта
типа ArrayBasedMap.Pair

Ваша задача реализовать следующие методы интерфейса Map:

size()
isEmpty()
containsKey(Object key)
containsValue(Object value)
get(Object key) {
put(K key, V value)
remove(Object key)
clear()
values()
Некоторые методы уже реализованы за Вас, например:

entrySet() - мы еще не рассматривали тему Set
keySet() - по той же причине
putAll(Map<? extends K, ? extends V> m) - требует немного магии Generics
О том, как будем тестировать

Тестирование Вашего ответа будет проводиться специальным тестом, разработанным в Google.
Дело в том, что у них есть своя библиотека, которая реализует основные коллекции
(так что не только Вы занимаетесь полной реализаций всех популярных коллекций с нуля;) ).
Для тестирования того, что коллекция работает корректно, у них существуют Unit тесты,
один из которых с небольшими изменениями и будет тестировать корректность Вашей реализации.

Оригинальный тест можно найти вот тут.

Детали реализации методов

Все методы должны быть реализованы в соответствии с официальной документацией.

!!! Этот раздел стоит читать только, если не понятно как реализовывать методы.
size() - просто возвращаем длину листа всех пар
isEmpty() - проверяем, не равна ли длинна нулю
containsKey(Object key) - обходим весь лист пар и, если хоть в одной паре у нас ключ равен аргументу метода, то возвращаем true
containsValue(Object value) - как и containsKey, только вместо ключа проверяем значение
get(Object key) - обходим все пары и возвращаем значение у пары, которая содержит заданный ключ
put(K key, V value) - проверяем, есть ли пара с заданным ключом; если есть - перезаписываем значение, если нету - создаем новую пару (не забываем о том, что нам нужно возвратить из метода согласно документации;) )
remove(Object key) - удаляем пару с заданным ключем
clear() - сносим все в нашем списке
values() - создаем лист всех значений всех пар
Ну что ж, задача сложная, да и проверка ОЧЕНЬ скрупулезная, так что остается пожелать Вам удачи в выполнении задания!